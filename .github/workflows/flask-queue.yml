name: Flask Image CI

on:
  push:
    branches: [ develop ]
    paths: 
      - main/**
      - aks/fl-queue.yml
    tags:
      - 'v*'
  pull_request:
    branches: [ develop ]
    paths: 
      - main/**
      - aks/fl-queue.yml
    tags:
      - 'v*'

env:
  REGISTRY_NAME: senjespakk/flask-queue
  CLUSTER_NAME: aks-getting-started
  CLUSTER_RESOURCE_GROUP: aks-getting-started
  NAMESPACE: ingress-basic


jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    environment: dockerize
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: senjespakk/flask-queue
          tag-custom: latest
          tag-semver: |
            {{raw}}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: main/
          push: true
          tags: ${{ steps.meta.outputs.tags }}${{ github.run_number }}
          labels: ${{ steps.meta.outputs.labels }}


      - name: Set the target Azure Kubernetes Service (AKS) cluster
        uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: ${{ env.CLUSTER_NAME }}
          resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}


      - name: Create namespace if doesn't exist
        run: |
          kubectl create namespace ${{ env.NAMESPACE }} --dry-run -o json | kubectl apply -f -


      - name: Deploy app to AKS
        uses: azure/k8s-deploy@v1
        with:
          manifests: |
            aks/fl-queue.yml
          images: |
            ${{ steps.meta.outputs.tags }}${{ github.run_number }}
          namespace: ${{ env.NAMESPACE }}
